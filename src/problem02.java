/*
** PROBLEM 2:
** Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
**
** 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
**
** By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

import java.util.LinkedList;
import java.util.Scanner; // libreria para input

public class problem2{
	public static void main(String[] args){
		int res;
		int hasta;
		System.out.printf("Ingrese el nœmero entero m‡ximo de Fibonacci\n");
		Scanner in = new Scanner(System.in);
		hasta = in.nextInt();
		res = fibopar(fibo(hasta));
		System.out.printf("La suma da %d", res);
	}
	public static LinkedList<Integer> fibo(Integer hasta){
		LinkedList<Integer> res = new LinkedList<Integer>();
		res.add(1);
		res.add(2);
		int i = 2;
		int temp = 0;
		while (temp <= hasta){
			temp = res.get(i-2) + res.get(i-1);
			res.add(temp);
			i++;
		}
		return res;
	}
	public static int fibopar(LinkedList<Integer> secufibo){
		int suma = 0;
		int i = 0;
		while (i < secufibo.size()){
			if (secufibo.get(i) % 2 == 0){
				suma = suma + secufibo.get(i);
			}
			i++;
		}
		return suma;
	}
}